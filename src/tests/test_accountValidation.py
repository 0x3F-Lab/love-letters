# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestAccountValidation:
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_accountValidation(self):
        self.driver.get("http://127.0.0.1:5000")
        self.driver.set_window_size(1357, 1020)
        self.driver.find_element(By.LINK_TEXT, "Sign Up").click()
        self.driver.find_element(By.ID, "first_name").click()
        self.driver.find_element(By.ID, "first_name").send_keys("123")
        self.driver.find_element(By.ID, "last_name").send_keys("123")
        self.driver.find_element(By.ID, "email").click()
        self.driver.find_element(By.ID, "email").send_keys("test")
        self.driver.find_element(By.ID, "password").click()
        self.driver.find_element(By.ID, "password").send_keys("1")
        self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(13)").click()
        self.driver.find_element(By.ID, "email").send_keys("test@")
        self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(13)").click()
        self.driver.find_element(By.ID, "email").send_keys("test@test")
        self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(13)").click()
        assert (
            self.driver.find_element(
                By.CSS_SELECTOR, ".form-group:nth-child(3) > .error-message"
            ).text
            == "First Name should contain only alphabetic characters."
        )
        assert (
            self.driver.find_element(
                By.CSS_SELECTOR, ".form-group:nth-child(4) > .error-message"
            ).text
            == "Last Name should contain only alphabetic characters."
        )
        assert (
            self.driver.find_element(
                By.CSS_SELECTOR, ".form-group:nth-child(6) > .error-message"
            ).text
            == "Invalid email format."
        )
        assert (
            self.driver.find_element(
                By.CSS_SELECTOR, ".form-group:nth-child(7) > .error-message"
            ).text
            == "Password must be at least 8 characters long."
        )
        assert (
            self.driver.find_element(
                By.CSS_SELECTOR, ".error-message:nth-child(13)"
            ).text
            == "At least one social media handle must be provided"
        )
        self.driver.find_element(By.ID, "first_name").click()
        self.driver.find_element(By.ID, "first_name").send_keys("a")
        self.driver.find_element(By.ID, "last_name").click()
        self.driver.find_element(By.ID, "last_name").send_keys("a")
        self.driver.find_element(By.ID, "email").click()
        self.driver.find_element(By.ID, "email").send_keys("test@test.com")
        self.driver.find_element(By.ID, "password").click()
        self.driver.find_element(By.ID, "password").send_keys("1aaaaaaa")
        self.driver.find_element(By.ID, "instagram").click()
        self.driver.find_element(By.ID, "instagram").send_keys("a")
        self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(14)").click()
        assert (
            self.driver.find_element(By.CSS_SELECTOR, ".error-message").text
            == "Password must contain at least one uppercase letter."
        )
        self.driver.find_element(By.ID, "password").click()
        self.driver.find_element(By.ID, "password").send_keys("1aaaaaaA")
        self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(13)").click()
        self.driver.find_element(By.ID, "password").click()
        self.driver.find_element(By.ID, "password").send_keys("1aaaaaaA!")
        self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(13)").click()
        assert (
            self.driver.find_element(By.CSS_SELECTOR, ".alert-success").text
            == "Account successfully created\\\\n√ó"
        )
